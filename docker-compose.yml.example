version: '3'

networks:
  laravel:

services:
  nginx:
    build:
      context: ./stacks/nginx
      args:
        - USERNAME=${USERNAME:-docker}
        - GROUPNAME=${GROUPNAME:-docker}
        - USERID=${USERID:-1000}
        - GROUPID=${GROUPID:-1000}
        - MAX_UPLOAD_FILE=${MAX_UPLOAD_FILE:-20M}
    ports:
      - 80:80
    volumes:
      - ${LARAVEL_PATH}:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - laravel

  mysql:
    image: mysql:8
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-homestead}
      MYSQL_USERNAME: ${MYSQL_USERNAME:-homestead}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secret}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secret}
      PMA_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secret}
    ports:
      - 8080:80
    depends_on:
      - mysql
    networks:
      - laravel

  php:
    build:
      context: ./stacks/php
      dockerfile: Dockerfile-fpm
      args:
        - USERNAME=${USERNAME:-docker}
        - GROUPNAME=${GROUPNAME:-docker}
        - USERID=${USERID:-1000}
        - GROUPID=${GROUPID:-1000}
        - MEMORY_LIMIT=${MEMORY_LIMIT:-256M}
        - MAX_UPLOAD_FILE=${MAX_UPLOAD_FILE:-20M}
    volumes:
      - ${LARAVEL_PATH}:/var/www/html:delegated
    networks:
      - laravel

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - laravel

  composer:
    build:
      context: ./stacks/composer
      args:
        - USERNAME=${USERNAME:-docker}
        - GROUPNAME=${GROUPNAME:-docker}
        - USERID=${USERID:-1000}
        - GROUPID=${GROUPID:-1000}
    volumes:
      - ${LARAVEL_PATH}:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel

  #
  # If you are creating a monolith system, uncomment npm or yarn as you wish
  #
  # npm:
  #   build:
  #     context: ./stacks/npm
  #     args:
  #       - USERNAME=${USERNAME:-docker}
  #       - GROUPNAME=${GROUPNAME:-docker}
  #       - USERID=${USERID:-1000}
  #       - GROUPID=${GROUPID:-1000}
  #   volumes:
  #     - ${LARAVEL_PATH}:/var/www/html
  #   ports:
  #     - 3000:3000
  #     - 3001:3001
  #   working_dir: /var/www/html
  #   entrypoint: ['npm']
  #   networks:
  #     - laravel
  #
  # yarn:
  #   build:
  #     context: ./stacks/npm
  #     args:
  #       - USERNAME=${USERNAME:-docker}
  #       - GROUPNAME=${GROUPNAME:-docker}
  #       - USERID=${USERID:-1000}
  #       - GROUPID=${GROUPID:-1000}
  #   volumes:
  #     - ${LARAVEL_PATH}:/var/www/html
  #   ports:
  #     - 3000:3000
  #     - 3001:3001
  #   working_dir: /var/www/html
  #   entrypoint: ['yarn']
  #   networks:
  #     - laravel

  artisan:
    build:
      context: ./stacks/php
      dockerfile: Dockerfile-cli
      args:
        - USERNAME=${USERNAME:-docker}
        - GROUPNAME=${GROUPNAME:-docker}
        - USERID=${USERID:-1000}
        - GROUPID=${GROUPID:-1000}
        - MEMORY_LIMIT=${MEMORY_LIMIT:-256M}
        - MAX_UPLOAD_FILE=${MAX_UPLOAD_FILE:-20M}
    volumes:
      - ${LARAVEL_PATH}:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel
